// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/StatCan/kubeflow-apis/apis/kubeflow/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodDefaultLister helps list PodDefaults.
// All objects returned here must be treated as read-only.
type PodDefaultLister interface {
	// List lists all PodDefaults in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodDefault, err error)
	// PodDefaults returns an object that can list and get PodDefaults.
	PodDefaults(namespace string) PodDefaultNamespaceLister
	PodDefaultListerExpansion
}

// podDefaultLister implements the PodDefaultLister interface.
type podDefaultLister struct {
	indexer cache.Indexer
}

// NewPodDefaultLister returns a new PodDefaultLister.
func NewPodDefaultLister(indexer cache.Indexer) PodDefaultLister {
	return &podDefaultLister{indexer: indexer}
}

// List lists all PodDefaults in the indexer.
func (s *podDefaultLister) List(selector labels.Selector) (ret []*v1alpha1.PodDefault, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodDefault))
	})
	return ret, err
}

// PodDefaults returns an object that can list and get PodDefaults.
func (s *podDefaultLister) PodDefaults(namespace string) PodDefaultNamespaceLister {
	return podDefaultNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodDefaultNamespaceLister helps list and get PodDefaults.
// All objects returned here must be treated as read-only.
type PodDefaultNamespaceLister interface {
	// List lists all PodDefaults in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PodDefault, err error)
	// Get retrieves the PodDefault from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PodDefault, error)
	PodDefaultNamespaceListerExpansion
}

// podDefaultNamespaceLister implements the PodDefaultNamespaceLister
// interface.
type podDefaultNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodDefaults in the indexer for a given namespace.
func (s podDefaultNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PodDefault, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodDefault))
	})
	return ret, err
}

// Get retrieves the PodDefault from the indexer for a given namespace and name.
func (s podDefaultNamespaceLister) Get(name string) (*v1alpha1.PodDefault, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("poddefault"), name)
	}
	return obj.(*v1alpha1.PodDefault), nil
}
